// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  kindeId     String @unique
  username    String? @unique
  email       String @unique
  amount      Float?
  incomes     Income[]
  expenses    Expense[]
  savingGoals SavingGoal[]
  debts       Debt[]
}

model Income {
  incomeId Int        @id @default(autoincrement())
  name     String
  amount   Float
  date     DateTime
  type     incomeType
  user     User @relation(fields: [userId], references: [id])
  userId   Int
}

enum incomeType {
  SALARY
  DIVIDENDS
  GOVERMENT_ASSISTANCE
  REALASTATE
  BUSSINES_INCOME
}

model Expense {
  expenseId   Int         @id @default(autoincrement())
  name        String
  description String?
  amount      Float
  date        DateTime
  type        expenseType
  user        User @relation(fields: [userId], references: [id])
  userId      Int
}

enum expenseType {
  FOOD_GROCERIES
  TRANSPORT
  HEALTHCARE
  INSURANCE
  HOUSING
  ENTERTAINMENT
  OTHER
}

model SavingGoal {
  savingId  Int      @id @default(autoincrement())
  name      String
  amount    Float
  saved     Float
  startDate DateTime
  endDate   DateTime
  user User @relation(fields: [userId], references: [id])
  userId    Int
}

model Debt {
  debtId    Int      @id @default(autoincrement())
  name      String
  amount    Float
  saved     Float
  startDate DateTime
  endDate   DateTime
  user User @relation(fields: [userId], references: [id])
  userId Int
}
